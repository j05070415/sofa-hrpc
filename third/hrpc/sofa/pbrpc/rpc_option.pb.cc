// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sofa/pbrpc/rpc_option.proto

#include "sofa/pbrpc/rpc_option.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace sofa {
namespace pbrpc {
}  // namespace pbrpc
}  // namespace sofa
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_sofa_2fpbrpc_2frpc_5foption_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_sofa_2fpbrpc_2frpc_5foption_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_sofa_2fpbrpc_2frpc_5foption_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_sofa_2fpbrpc_2frpc_5foption_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_sofa_2fpbrpc_2frpc_5foption_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033sofa/pbrpc/rpc_option.proto\022\nsofa.pbrp"
  "c\032 google/protobuf/descriptor.proto*}\n\014C"
  "ompressType\022\024\n\020CompressTypeNone\020\000\022\024\n\020Com"
  "pressTypeGzip\020\001\022\024\n\020CompressTypeZlib\020\002\022\026\n"
  "\022CompressTypeSnappy\020\003\022\023\n\017CompressTypeLZ4"
  "\020\004::\n\017service_timeout\022\037.google.protobuf."
  "ServiceOptions\030\240\234\001 \001(\003:8\n\016method_timeout"
  "\022\036.google.protobuf.MethodOptions\030\240\234\001 \001(\003"
  ":Y\n\025request_compress_type\022\036.google.proto"
  "buf.MethodOptions\030\241\234\001 \001(\0162\030.sofa.pbrpc.C"
  "ompressType:Z\n\026response_compress_type\022\036."
  "google.protobuf.MethodOptions\030\242\234\001 \001(\0162\030."
  "sofa.pbrpc.CompressTypeb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_sofa_2fpbrpc_2frpc_5foption_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_sofa_2fpbrpc_2frpc_5foption_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_sofa_2fpbrpc_2frpc_5foption_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_sofa_2fpbrpc_2frpc_5foption_2eproto = {
  false, false, descriptor_table_protodef_sofa_2fpbrpc_2frpc_5foption_2eproto, "sofa/pbrpc/rpc_option.proto", 511,
  &descriptor_table_sofa_2fpbrpc_2frpc_5foption_2eproto_once, descriptor_table_sofa_2fpbrpc_2frpc_5foption_2eproto_sccs, descriptor_table_sofa_2fpbrpc_2frpc_5foption_2eproto_deps, 0, 1,
  schemas, file_default_instances, TableStruct_sofa_2fpbrpc_2frpc_5foption_2eproto::offsets,
  file_level_metadata_sofa_2fpbrpc_2frpc_5foption_2eproto, 0, file_level_enum_descriptors_sofa_2fpbrpc_2frpc_5foption_2eproto, file_level_service_descriptors_sofa_2fpbrpc_2frpc_5foption_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_sofa_2fpbrpc_2frpc_5foption_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_sofa_2fpbrpc_2frpc_5foption_2eproto)), true);
namespace sofa {
namespace pbrpc {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CompressType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_sofa_2fpbrpc_2frpc_5foption_2eproto);
  return file_level_enum_descriptors_sofa_2fpbrpc_2frpc_5foption_2eproto[0];
}
bool CompressType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< ::PROTOBUF_NAMESPACE_ID::int64 >, 3, false >
  service_timeout(kServiceTimeoutFieldNumber, PROTOBUF_LONGLONG(0));
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< ::PROTOBUF_NAMESPACE_ID::int64 >, 3, false >
  method_timeout(kMethodTimeoutFieldNumber, PROTOBUF_LONGLONG(0));
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::EnumTypeTraits< ::sofa::pbrpc::CompressType, ::sofa::pbrpc::CompressType_IsValid>, 14, false >
  request_compress_type(kRequestCompressTypeFieldNumber, static_cast< ::sofa::pbrpc::CompressType >(0));
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::EnumTypeTraits< ::sofa::pbrpc::CompressType, ::sofa::pbrpc::CompressType_IsValid>, 14, false >
  response_compress_type(kResponseCompressTypeFieldNumber, static_cast< ::sofa::pbrpc::CompressType >(0));

// @@protoc_insertion_point(namespace_scope)
}  // namespace pbrpc
}  // namespace sofa
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
