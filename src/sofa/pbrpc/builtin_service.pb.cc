// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sofa/pbrpc/builtin_service.proto

#include "sofa/pbrpc/builtin_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fdescriptor_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_FileDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MethodStat_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ServerOptions_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ServiceStat_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto;
namespace sofa {
namespace pbrpc {
namespace builtin {
class HealthRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HealthRequest> _instance;
} _HealthRequest_default_instance_;
class HealthResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HealthResponse> _instance;
} _HealthResponse_default_instance_;
class ServerOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerOptions> _instance;
} _ServerOptions_default_instance_;
class ServerOptionsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerOptionsRequest> _instance;
} _ServerOptionsRequest_default_instance_;
class ServerOptionsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerOptionsResponse> _instance;
} _ServerOptionsResponse_default_instance_;
class UpdateOptionsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateOptionsRequest> _instance;
} _UpdateOptionsRequest_default_instance_;
class UpdateOptionsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateOptionsResponse> _instance;
} _UpdateOptionsResponse_default_instance_;
class ServerStatusRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerStatusRequest> _instance;
} _ServerStatusRequest_default_instance_;
class ServerStatusResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerStatusResponse> _instance;
} _ServerStatusResponse_default_instance_;
class ListServiceRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListServiceRequest> _instance;
} _ListServiceRequest_default_instance_;
class ListServiceResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListServiceResponse> _instance;
} _ListServiceResponse_default_instance_;
class MethodStatDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MethodStat> _instance;
} _MethodStat_default_instance_;
class ServiceStatDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServiceStat> _instance;
} _ServiceStat_default_instance_;
class StatRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatRequest> _instance;
} _StatRequest_default_instance_;
class StatResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatResponse> _instance;
} _StatResponse_default_instance_;
}  // namespace builtin
}  // namespace pbrpc
}  // namespace sofa
static void InitDefaultsscc_info_HealthRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sofa::pbrpc::builtin::_HealthRequest_default_instance_;
    new (ptr) ::sofa::pbrpc::builtin::HealthRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sofa::pbrpc::builtin::HealthRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HealthRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HealthRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_HealthResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sofa::pbrpc::builtin::_HealthResponse_default_instance_;
    new (ptr) ::sofa::pbrpc::builtin::HealthResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sofa::pbrpc::builtin::HealthResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HealthResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HealthResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ListServiceRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sofa::pbrpc::builtin::_ListServiceRequest_default_instance_;
    new (ptr) ::sofa::pbrpc::builtin::ListServiceRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sofa::pbrpc::builtin::ListServiceRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListServiceRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListServiceRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ListServiceResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sofa::pbrpc::builtin::_ListServiceResponse_default_instance_;
    new (ptr) ::sofa::pbrpc::builtin::ListServiceResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sofa::pbrpc::builtin::ListServiceResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListServiceResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListServiceResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto}, {
      &scc_info_FileDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto.base,}};

static void InitDefaultsscc_info_MethodStat_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sofa::pbrpc::builtin::_MethodStat_default_instance_;
    new (ptr) ::sofa::pbrpc::builtin::MethodStat();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sofa::pbrpc::builtin::MethodStat::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MethodStat_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MethodStat_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ServerOptions_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sofa::pbrpc::builtin::_ServerOptions_default_instance_;
    new (ptr) ::sofa::pbrpc::builtin::ServerOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sofa::pbrpc::builtin::ServerOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ServerOptions_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ServerOptions_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ServerOptionsRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sofa::pbrpc::builtin::_ServerOptionsRequest_default_instance_;
    new (ptr) ::sofa::pbrpc::builtin::ServerOptionsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sofa::pbrpc::builtin::ServerOptionsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ServerOptionsRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ServerOptionsRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ServerOptionsResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sofa::pbrpc::builtin::_ServerOptionsResponse_default_instance_;
    new (ptr) ::sofa::pbrpc::builtin::ServerOptionsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sofa::pbrpc::builtin::ServerOptionsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ServerOptionsResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ServerOptionsResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto}, {
      &scc_info_ServerOptions_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_ServerStatusRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sofa::pbrpc::builtin::_ServerStatusRequest_default_instance_;
    new (ptr) ::sofa::pbrpc::builtin::ServerStatusRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sofa::pbrpc::builtin::ServerStatusRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ServerStatusRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ServerStatusRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ServerStatusResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sofa::pbrpc::builtin::_ServerStatusResponse_default_instance_;
    new (ptr) ::sofa::pbrpc::builtin::ServerStatusResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sofa::pbrpc::builtin::ServerStatusResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ServerStatusResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ServerStatusResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ServiceStat_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sofa::pbrpc::builtin::_ServiceStat_default_instance_;
    new (ptr) ::sofa::pbrpc::builtin::ServiceStat();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sofa::pbrpc::builtin::ServiceStat::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ServiceStat_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ServiceStat_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto}, {
      &scc_info_MethodStat_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_StatRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sofa::pbrpc::builtin::_StatRequest_default_instance_;
    new (ptr) ::sofa::pbrpc::builtin::StatRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sofa::pbrpc::builtin::StatRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StatRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StatRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_StatResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sofa::pbrpc::builtin::_StatResponse_default_instance_;
    new (ptr) ::sofa::pbrpc::builtin::StatResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sofa::pbrpc::builtin::StatResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StatResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StatResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto}, {
      &scc_info_ServiceStat_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_UpdateOptionsRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sofa::pbrpc::builtin::_UpdateOptionsRequest_default_instance_;
    new (ptr) ::sofa::pbrpc::builtin::UpdateOptionsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sofa::pbrpc::builtin::UpdateOptionsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateOptionsRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateOptionsRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto}, {
      &scc_info_ServerOptions_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_UpdateOptionsResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sofa::pbrpc::builtin::_UpdateOptionsResponse_default_instance_;
    new (ptr) ::sofa::pbrpc::builtin::UpdateOptionsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sofa::pbrpc::builtin::UpdateOptionsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateOptionsResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateOptionsResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto}, {
      &scc_info_ServerOptions_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto[15];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* file_level_service_descriptors_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto[1];

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::HealthRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::HealthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::HealthResponse, health_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::HealthResponse, version_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::HealthResponse, start_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerOptions, work_thread_num_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerOptions, keep_alive_time_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerOptions, max_pending_buffer_size_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerOptions, max_throughput_in_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerOptions, max_throughput_out_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerOptions, disable_builtin_services_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerOptions, disable_list_service_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerOptions, max_connection_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerOptionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerOptionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerOptionsResponse, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::UpdateOptionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::UpdateOptionsRequest, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::UpdateOptionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::UpdateOptionsResponse, options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerStatusResponse, is_listening_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerStatusResponse, connection_count_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerStatusResponse, service_count_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerStatusResponse, pending_message_count_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerStatusResponse, pending_buffer_size_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServerStatusResponse, pending_data_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ListServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ListServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ListServiceResponse, services_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ListServiceResponse, files_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::MethodStat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::MethodStat, method_name_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::MethodStat, succeed_count_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::MethodStat, succeed_avg_time_us_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::MethodStat, succeed_max_time_us_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::MethodStat, failed_count_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::MethodStat, failed_avg_time_us_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::MethodStat, failed_max_time_us_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::MethodStat, slot_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServiceStat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServiceStat, service_name_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServiceStat, period_seconds_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServiceStat, succeed_count_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServiceStat, failed_count_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::ServiceStat, method_stats_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::StatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::StatRequest, service_name_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::StatRequest, period_seconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::StatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::StatResponse, service_stats_),
  PROTOBUF_FIELD_OFFSET(::sofa::pbrpc::builtin::StatResponse, server_start_time_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::sofa::pbrpc::builtin::HealthRequest)},
  { 5, -1, sizeof(::sofa::pbrpc::builtin::HealthResponse)},
  { 13, -1, sizeof(::sofa::pbrpc::builtin::ServerOptions)},
  { 26, -1, sizeof(::sofa::pbrpc::builtin::ServerOptionsRequest)},
  { 31, -1, sizeof(::sofa::pbrpc::builtin::ServerOptionsResponse)},
  { 37, -1, sizeof(::sofa::pbrpc::builtin::UpdateOptionsRequest)},
  { 43, -1, sizeof(::sofa::pbrpc::builtin::UpdateOptionsResponse)},
  { 49, -1, sizeof(::sofa::pbrpc::builtin::ServerStatusRequest)},
  { 54, -1, sizeof(::sofa::pbrpc::builtin::ServerStatusResponse)},
  { 65, -1, sizeof(::sofa::pbrpc::builtin::ListServiceRequest)},
  { 70, -1, sizeof(::sofa::pbrpc::builtin::ListServiceResponse)},
  { 77, -1, sizeof(::sofa::pbrpc::builtin::MethodStat)},
  { 90, -1, sizeof(::sofa::pbrpc::builtin::ServiceStat)},
  { 100, -1, sizeof(::sofa::pbrpc::builtin::StatRequest)},
  { 107, -1, sizeof(::sofa::pbrpc::builtin::StatResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sofa::pbrpc::builtin::_HealthRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sofa::pbrpc::builtin::_HealthResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sofa::pbrpc::builtin::_ServerOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sofa::pbrpc::builtin::_ServerOptionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sofa::pbrpc::builtin::_ServerOptionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sofa::pbrpc::builtin::_UpdateOptionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sofa::pbrpc::builtin::_UpdateOptionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sofa::pbrpc::builtin::_ServerStatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sofa::pbrpc::builtin::_ServerStatusResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sofa::pbrpc::builtin::_ListServiceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sofa::pbrpc::builtin::_ListServiceResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sofa::pbrpc::builtin::_MethodStat_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sofa::pbrpc::builtin::_ServiceStat_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sofa::pbrpc::builtin::_StatRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sofa::pbrpc::builtin::_StatResponse_default_instance_),
};

const char descriptor_table_protodef_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n sofa/pbrpc/builtin_service.proto\022\022sofa"
  ".pbrpc.builtin\032 google/protobuf/descript"
  "or.proto\032\033sofa/pbrpc/rpc_option.proto\"\017\n"
  "\rHealthRequest\"E\n\016HealthResponse\022\016\n\006heal"
  "th\030\001 \001(\t\022\017\n\007version\030\002 \001(\t\022\022\n\nstart_time\030"
  "\003 \001(\t\"\367\001\n\rServerOptions\022\027\n\017work_thread_n"
  "um\030\001 \001(\003\022\027\n\017keep_alive_time\030\002 \001(\003\022\037\n\027max"
  "_pending_buffer_size\030\003 \001(\003\022\031\n\021max_throug"
  "hput_in\030\004 \001(\003\022\032\n\022max_throughput_out\030\005 \001("
  "\003\022 \n\030disable_builtin_services\030\006 \001(\010\022\034\n\024d"
  "isable_list_service\030\007 \001(\010\022\034\n\024max_connect"
  "ion_count\030\010 \001(\003\"\026\n\024ServerOptionsRequest\""
  "K\n\025ServerOptionsResponse\0222\n\007options\030\001 \001("
  "\0132!.sofa.pbrpc.builtin.ServerOptions\"J\n\024"
  "UpdateOptionsRequest\0222\n\007options\030\001 \001(\0132!."
  "sofa.pbrpc.builtin.ServerOptions\"K\n\025Upda"
  "teOptionsResponse\0222\n\007options\030\001 \001(\0132!.sof"
  "a.pbrpc.builtin.ServerOptions\"\025\n\023ServerS"
  "tatusRequest\"\264\001\n\024ServerStatusResponse\022\024\n"
  "\014is_listening\030\001 \001(\010\022\030\n\020connection_count\030"
  "\002 \001(\003\022\025\n\rservice_count\030\003 \001(\003\022\035\n\025pending_"
  "message_count\030\004 \001(\003\022\033\n\023pending_buffer_si"
  "ze\030\005 \001(\003\022\031\n\021pending_data_size\030\006 \001(\003\"\024\n\022L"
  "istServiceRequest\"\\\n\023ListServiceResponse"
  "\022\020\n\010services\030\001 \003(\t\0223\n\005files\030\002 \003(\0132$.goog"
  "le.protobuf.FileDescriptorProto\"\321\001\n\nMeth"
  "odStat\022\023\n\013method_name\030\001 \001(\t\022\025\n\rsucceed_c"
  "ount\030\002 \001(\003\022\033\n\023succeed_avg_time_us\030\003 \001(\002\022"
  "\033\n\023succeed_max_time_us\030\004 \001(\003\022\024\n\014failed_c"
  "ount\030\005 \001(\003\022\032\n\022failed_avg_time_us\030\006 \001(\002\022\032"
  "\n\022failed_max_time_us\030\007 \001(\003\022\017\n\007slot_id\030\010 "
  "\001(\003\"\236\001\n\013ServiceStat\022\024\n\014service_name\030\001 \001("
  "\t\022\026\n\016period_seconds\030\002 \001(\003\022\025\n\rsucceed_cou"
  "nt\030\003 \001(\003\022\024\n\014failed_count\030\004 \001(\003\0224\n\014method"
  "_stats\030\005 \003(\0132\036.sofa.pbrpc.builtin.Method"
  "Stat\";\n\013StatRequest\022\024\n\014service_name\030\001 \001("
  "\t\022\026\n\016period_seconds\030\002 \001(\003\"a\n\014StatRespons"
  "e\0226\n\rservice_stats\030\001 \003(\0132\037.sofa.pbrpc.bu"
  "iltin.ServiceStat\022\031\n\021server_start_time\030\002"
  " \001(\t2\310\004\n\016BuiltinService\022O\n\006Health\022!.sofa"
  ".pbrpc.builtin.HealthRequest\032\".sofa.pbrp"
  "c.builtin.HealthResponse\022d\n\rServerOption"
  "s\022(.sofa.pbrpc.builtin.ServerOptionsRequ"
  "est\032).sofa.pbrpc.builtin.ServerOptionsRe"
  "sponse\022d\n\rUpdateOptions\022(.sofa.pbrpc.bui"
  "ltin.UpdateOptionsRequest\032).sofa.pbrpc.b"
  "uiltin.UpdateOptionsResponse\022a\n\014ServerSt"
  "atus\022\'.sofa.pbrpc.builtin.ServerStatusRe"
  "quest\032(.sofa.pbrpc.builtin.ServerStatusR"
  "esponse\022d\n\013ListService\022&.sofa.pbrpc.buil"
  "tin.ListServiceRequest\032\'.sofa.pbrpc.buil"
  "tin.ListServiceResponse\"\004\220\342\t\001\022I\n\004Stat\022\037."
  "sofa.pbrpc.builtin.StatRequest\032 .sofa.pb"
  "rpc.builtin.StatResponse\032\005\200\342\t\270\027B\t\200\001\001\210\001\001\220"
  "\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
  &::descriptor_table_sofa_2fpbrpc_2frpc_5foption_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto_sccs[15] = {
  &scc_info_HealthRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,
  &scc_info_HealthResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,
  &scc_info_ListServiceRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,
  &scc_info_ListServiceResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,
  &scc_info_MethodStat_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,
  &scc_info_ServerOptions_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,
  &scc_info_ServerOptionsRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,
  &scc_info_ServerOptionsResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,
  &scc_info_ServerStatusRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,
  &scc_info_ServerStatusResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,
  &scc_info_ServiceStat_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,
  &scc_info_StatRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,
  &scc_info_StatResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,
  &scc_info_UpdateOptionsRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,
  &scc_info_UpdateOptionsResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto = {
  false, false, descriptor_table_protodef_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto, "sofa/pbrpc/builtin_service.proto", 2170,
  &descriptor_table_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto_once, descriptor_table_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto_sccs, descriptor_table_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto_deps, 15, 2,
  schemas, file_default_instances, TableStruct_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto::offsets,
  file_level_metadata_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto, 15, file_level_enum_descriptors_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto, file_level_service_descriptors_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto)), true);
namespace sofa {
namespace pbrpc {
namespace builtin {

// ===================================================================

void HealthRequest::InitAsDefaultInstance() {
}
class HealthRequest::_Internal {
 public:
};

HealthRequest::HealthRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sofa.pbrpc.builtin.HealthRequest)
}
HealthRequest::HealthRequest(const HealthRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sofa.pbrpc.builtin.HealthRequest)
}

void HealthRequest::SharedCtor() {
}

HealthRequest::~HealthRequest() {
  // @@protoc_insertion_point(destructor:sofa.pbrpc.builtin.HealthRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HealthRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HealthRequest::ArenaDtor(void* object) {
  HealthRequest* _this = reinterpret_cast< HealthRequest* >(object);
  (void)_this;
}
void HealthRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HealthRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HealthRequest& HealthRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HealthRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void HealthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sofa.pbrpc.builtin.HealthRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HealthRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HealthRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sofa.pbrpc.builtin.HealthRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sofa.pbrpc.builtin.HealthRequest)
  return target;
}

size_t HealthRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sofa.pbrpc.builtin.HealthRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HealthRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sofa.pbrpc.builtin.HealthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HealthRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HealthRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sofa.pbrpc.builtin.HealthRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sofa.pbrpc.builtin.HealthRequest)
    MergeFrom(*source);
  }
}

void HealthRequest::MergeFrom(const HealthRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sofa.pbrpc.builtin.HealthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HealthRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sofa.pbrpc.builtin.HealthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HealthRequest::CopyFrom(const HealthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sofa.pbrpc.builtin.HealthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HealthRequest::IsInitialized() const {
  return true;
}

void HealthRequest::InternalSwap(HealthRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HealthRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HealthResponse::InitAsDefaultInstance() {
}
class HealthResponse::_Internal {
 public:
};

HealthResponse::HealthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sofa.pbrpc.builtin.HealthResponse)
}
HealthResponse::HealthResponse(const HealthResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  health_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_health().empty()) {
    health_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_health(),
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  start_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_start_time().empty()) {
    start_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_start_time(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:sofa.pbrpc.builtin.HealthResponse)
}

void HealthResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HealthResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  health_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  start_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

HealthResponse::~HealthResponse() {
  // @@protoc_insertion_point(destructor:sofa.pbrpc.builtin.HealthResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HealthResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  health_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  start_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void HealthResponse::ArenaDtor(void* object) {
  HealthResponse* _this = reinterpret_cast< HealthResponse* >(object);
  (void)_this;
}
void HealthResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HealthResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HealthResponse& HealthResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HealthResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void HealthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sofa.pbrpc.builtin.HealthResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  health_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  start_time_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HealthResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string health = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_health();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "sofa.pbrpc.builtin.HealthResponse.health"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "sofa.pbrpc.builtin.HealthResponse.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string start_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_start_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "sofa.pbrpc.builtin.HealthResponse.start_time"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HealthResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sofa.pbrpc.builtin.HealthResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string health = 1;
  if (this->health().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_health().data(), static_cast<int>(this->_internal_health().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sofa.pbrpc.builtin.HealthResponse.health");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_health(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sofa.pbrpc.builtin.HealthResponse.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  // string start_time = 3;
  if (this->start_time().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_start_time().data(), static_cast<int>(this->_internal_start_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sofa.pbrpc.builtin.HealthResponse.start_time");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_start_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sofa.pbrpc.builtin.HealthResponse)
  return target;
}

size_t HealthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sofa.pbrpc.builtin.HealthResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string health = 1;
  if (this->health().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_health());
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string start_time = 3;
  if (this->start_time().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_start_time());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HealthResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sofa.pbrpc.builtin.HealthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HealthResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HealthResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sofa.pbrpc.builtin.HealthResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sofa.pbrpc.builtin.HealthResponse)
    MergeFrom(*source);
  }
}

void HealthResponse::MergeFrom(const HealthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sofa.pbrpc.builtin.HealthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.health().size() > 0) {
    _internal_set_health(from._internal_health());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.start_time().size() > 0) {
    _internal_set_start_time(from._internal_start_time());
  }
}

void HealthResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sofa.pbrpc.builtin.HealthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HealthResponse::CopyFrom(const HealthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sofa.pbrpc.builtin.HealthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HealthResponse::IsInitialized() const {
  return true;
}

void HealthResponse::InternalSwap(HealthResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  health_.Swap(&other->health_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  start_time_.Swap(&other->start_time_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata HealthResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServerOptions::InitAsDefaultInstance() {
}
class ServerOptions::_Internal {
 public:
};

ServerOptions::ServerOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sofa.pbrpc.builtin.ServerOptions)
}
ServerOptions::ServerOptions(const ServerOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&work_thread_num_, &from.work_thread_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&disable_list_service_) -
    reinterpret_cast<char*>(&work_thread_num_)) + sizeof(disable_list_service_));
  // @@protoc_insertion_point(copy_constructor:sofa.pbrpc.builtin.ServerOptions)
}

void ServerOptions::SharedCtor() {
  ::memset(&work_thread_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disable_list_service_) -
      reinterpret_cast<char*>(&work_thread_num_)) + sizeof(disable_list_service_));
}

ServerOptions::~ServerOptions() {
  // @@protoc_insertion_point(destructor:sofa.pbrpc.builtin.ServerOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ServerOptions::ArenaDtor(void* object) {
  ServerOptions* _this = reinterpret_cast< ServerOptions* >(object);
  (void)_this;
}
void ServerOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerOptions& ServerOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerOptions_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServerOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:sofa.pbrpc.builtin.ServerOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&work_thread_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disable_list_service_) -
      reinterpret_cast<char*>(&work_thread_num_)) + sizeof(disable_list_service_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 work_thread_num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          work_thread_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 keep_alive_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          keep_alive_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 max_pending_buffer_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          max_pending_buffer_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 max_throughput_in = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          max_throughput_in_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 max_throughput_out = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          max_throughput_out_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool disable_builtin_services = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          disable_builtin_services_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool disable_list_service = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          disable_list_service_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 max_connection_count = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          max_connection_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sofa.pbrpc.builtin.ServerOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 work_thread_num = 1;
  if (this->work_thread_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_work_thread_num(), target);
  }

  // int64 keep_alive_time = 2;
  if (this->keep_alive_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_keep_alive_time(), target);
  }

  // int64 max_pending_buffer_size = 3;
  if (this->max_pending_buffer_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_max_pending_buffer_size(), target);
  }

  // int64 max_throughput_in = 4;
  if (this->max_throughput_in() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_max_throughput_in(), target);
  }

  // int64 max_throughput_out = 5;
  if (this->max_throughput_out() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_max_throughput_out(), target);
  }

  // bool disable_builtin_services = 6;
  if (this->disable_builtin_services() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_disable_builtin_services(), target);
  }

  // bool disable_list_service = 7;
  if (this->disable_list_service() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_disable_list_service(), target);
  }

  // int64 max_connection_count = 8;
  if (this->max_connection_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_max_connection_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sofa.pbrpc.builtin.ServerOptions)
  return target;
}

size_t ServerOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sofa.pbrpc.builtin.ServerOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 work_thread_num = 1;
  if (this->work_thread_num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_work_thread_num());
  }

  // int64 keep_alive_time = 2;
  if (this->keep_alive_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_keep_alive_time());
  }

  // int64 max_pending_buffer_size = 3;
  if (this->max_pending_buffer_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_max_pending_buffer_size());
  }

  // int64 max_throughput_in = 4;
  if (this->max_throughput_in() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_max_throughput_in());
  }

  // int64 max_throughput_out = 5;
  if (this->max_throughput_out() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_max_throughput_out());
  }

  // int64 max_connection_count = 8;
  if (this->max_connection_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_max_connection_count());
  }

  // bool disable_builtin_services = 6;
  if (this->disable_builtin_services() != 0) {
    total_size += 1 + 1;
  }

  // bool disable_list_service = 7;
  if (this->disable_list_service() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sofa.pbrpc.builtin.ServerOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sofa.pbrpc.builtin.ServerOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sofa.pbrpc.builtin.ServerOptions)
    MergeFrom(*source);
  }
}

void ServerOptions::MergeFrom(const ServerOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sofa.pbrpc.builtin.ServerOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.work_thread_num() != 0) {
    _internal_set_work_thread_num(from._internal_work_thread_num());
  }
  if (from.keep_alive_time() != 0) {
    _internal_set_keep_alive_time(from._internal_keep_alive_time());
  }
  if (from.max_pending_buffer_size() != 0) {
    _internal_set_max_pending_buffer_size(from._internal_max_pending_buffer_size());
  }
  if (from.max_throughput_in() != 0) {
    _internal_set_max_throughput_in(from._internal_max_throughput_in());
  }
  if (from.max_throughput_out() != 0) {
    _internal_set_max_throughput_out(from._internal_max_throughput_out());
  }
  if (from.max_connection_count() != 0) {
    _internal_set_max_connection_count(from._internal_max_connection_count());
  }
  if (from.disable_builtin_services() != 0) {
    _internal_set_disable_builtin_services(from._internal_disable_builtin_services());
  }
  if (from.disable_list_service() != 0) {
    _internal_set_disable_list_service(from._internal_disable_list_service());
  }
}

void ServerOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sofa.pbrpc.builtin.ServerOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerOptions::CopyFrom(const ServerOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sofa.pbrpc.builtin.ServerOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerOptions::IsInitialized() const {
  return true;
}

void ServerOptions::InternalSwap(ServerOptions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServerOptions, disable_list_service_)
      + sizeof(ServerOptions::disable_list_service_)
      - PROTOBUF_FIELD_OFFSET(ServerOptions, work_thread_num_)>(
          reinterpret_cast<char*>(&work_thread_num_),
          reinterpret_cast<char*>(&other->work_thread_num_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerOptions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServerOptionsRequest::InitAsDefaultInstance() {
}
class ServerOptionsRequest::_Internal {
 public:
};

ServerOptionsRequest::ServerOptionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sofa.pbrpc.builtin.ServerOptionsRequest)
}
ServerOptionsRequest::ServerOptionsRequest(const ServerOptionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sofa.pbrpc.builtin.ServerOptionsRequest)
}

void ServerOptionsRequest::SharedCtor() {
}

ServerOptionsRequest::~ServerOptionsRequest() {
  // @@protoc_insertion_point(destructor:sofa.pbrpc.builtin.ServerOptionsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerOptionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ServerOptionsRequest::ArenaDtor(void* object) {
  ServerOptionsRequest* _this = reinterpret_cast< ServerOptionsRequest* >(object);
  (void)_this;
}
void ServerOptionsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerOptionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerOptionsRequest& ServerOptionsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerOptionsRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServerOptionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sofa.pbrpc.builtin.ServerOptionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerOptionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerOptionsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sofa.pbrpc.builtin.ServerOptionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sofa.pbrpc.builtin.ServerOptionsRequest)
  return target;
}

size_t ServerOptionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sofa.pbrpc.builtin.ServerOptionsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerOptionsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sofa.pbrpc.builtin.ServerOptionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerOptionsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerOptionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sofa.pbrpc.builtin.ServerOptionsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sofa.pbrpc.builtin.ServerOptionsRequest)
    MergeFrom(*source);
  }
}

void ServerOptionsRequest::MergeFrom(const ServerOptionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sofa.pbrpc.builtin.ServerOptionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ServerOptionsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sofa.pbrpc.builtin.ServerOptionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerOptionsRequest::CopyFrom(const ServerOptionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sofa.pbrpc.builtin.ServerOptionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerOptionsRequest::IsInitialized() const {
  return true;
}

void ServerOptionsRequest::InternalSwap(ServerOptionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerOptionsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServerOptionsResponse::InitAsDefaultInstance() {
  ::sofa::pbrpc::builtin::_ServerOptionsResponse_default_instance_._instance.get_mutable()->options_ = const_cast< ::sofa::pbrpc::builtin::ServerOptions*>(
      ::sofa::pbrpc::builtin::ServerOptions::internal_default_instance());
}
class ServerOptionsResponse::_Internal {
 public:
  static const ::sofa::pbrpc::builtin::ServerOptions& options(const ServerOptionsResponse* msg);
};

const ::sofa::pbrpc::builtin::ServerOptions&
ServerOptionsResponse::_Internal::options(const ServerOptionsResponse* msg) {
  return *msg->options_;
}
ServerOptionsResponse::ServerOptionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sofa.pbrpc.builtin.ServerOptionsResponse)
}
ServerOptionsResponse::ServerOptionsResponse(const ServerOptionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::sofa::pbrpc::builtin::ServerOptions(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:sofa.pbrpc.builtin.ServerOptionsResponse)
}

void ServerOptionsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ServerOptionsResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  options_ = nullptr;
}

ServerOptionsResponse::~ServerOptionsResponse() {
  // @@protoc_insertion_point(destructor:sofa.pbrpc.builtin.ServerOptionsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerOptionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void ServerOptionsResponse::ArenaDtor(void* object) {
  ServerOptionsResponse* _this = reinterpret_cast< ServerOptionsResponse* >(object);
  (void)_this;
}
void ServerOptionsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerOptionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerOptionsResponse& ServerOptionsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerOptionsResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServerOptionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sofa.pbrpc.builtin.ServerOptionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerOptionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .sofa.pbrpc.builtin.ServerOptions options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerOptionsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sofa.pbrpc.builtin.ServerOptionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sofa.pbrpc.builtin.ServerOptions options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sofa.pbrpc.builtin.ServerOptionsResponse)
  return target;
}

size_t ServerOptionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sofa.pbrpc.builtin.ServerOptionsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sofa.pbrpc.builtin.ServerOptions options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerOptionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sofa.pbrpc.builtin.ServerOptionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerOptionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerOptionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sofa.pbrpc.builtin.ServerOptionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sofa.pbrpc.builtin.ServerOptionsResponse)
    MergeFrom(*source);
  }
}

void ServerOptionsResponse::MergeFrom(const ServerOptionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sofa.pbrpc.builtin.ServerOptionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::sofa::pbrpc::builtin::ServerOptions::MergeFrom(from._internal_options());
  }
}

void ServerOptionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sofa.pbrpc.builtin.ServerOptionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerOptionsResponse::CopyFrom(const ServerOptionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sofa.pbrpc.builtin.ServerOptionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerOptionsResponse::IsInitialized() const {
  return true;
}

void ServerOptionsResponse::InternalSwap(ServerOptionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerOptionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateOptionsRequest::InitAsDefaultInstance() {
  ::sofa::pbrpc::builtin::_UpdateOptionsRequest_default_instance_._instance.get_mutable()->options_ = const_cast< ::sofa::pbrpc::builtin::ServerOptions*>(
      ::sofa::pbrpc::builtin::ServerOptions::internal_default_instance());
}
class UpdateOptionsRequest::_Internal {
 public:
  static const ::sofa::pbrpc::builtin::ServerOptions& options(const UpdateOptionsRequest* msg);
};

const ::sofa::pbrpc::builtin::ServerOptions&
UpdateOptionsRequest::_Internal::options(const UpdateOptionsRequest* msg) {
  return *msg->options_;
}
UpdateOptionsRequest::UpdateOptionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sofa.pbrpc.builtin.UpdateOptionsRequest)
}
UpdateOptionsRequest::UpdateOptionsRequest(const UpdateOptionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::sofa::pbrpc::builtin::ServerOptions(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:sofa.pbrpc.builtin.UpdateOptionsRequest)
}

void UpdateOptionsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateOptionsRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  options_ = nullptr;
}

UpdateOptionsRequest::~UpdateOptionsRequest() {
  // @@protoc_insertion_point(destructor:sofa.pbrpc.builtin.UpdateOptionsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateOptionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void UpdateOptionsRequest::ArenaDtor(void* object) {
  UpdateOptionsRequest* _this = reinterpret_cast< UpdateOptionsRequest* >(object);
  (void)_this;
}
void UpdateOptionsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateOptionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateOptionsRequest& UpdateOptionsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateOptionsRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void UpdateOptionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sofa.pbrpc.builtin.UpdateOptionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateOptionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .sofa.pbrpc.builtin.ServerOptions options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateOptionsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sofa.pbrpc.builtin.UpdateOptionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sofa.pbrpc.builtin.ServerOptions options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sofa.pbrpc.builtin.UpdateOptionsRequest)
  return target;
}

size_t UpdateOptionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sofa.pbrpc.builtin.UpdateOptionsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sofa.pbrpc.builtin.ServerOptions options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateOptionsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sofa.pbrpc.builtin.UpdateOptionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateOptionsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateOptionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sofa.pbrpc.builtin.UpdateOptionsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sofa.pbrpc.builtin.UpdateOptionsRequest)
    MergeFrom(*source);
  }
}

void UpdateOptionsRequest::MergeFrom(const UpdateOptionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sofa.pbrpc.builtin.UpdateOptionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::sofa::pbrpc::builtin::ServerOptions::MergeFrom(from._internal_options());
  }
}

void UpdateOptionsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sofa.pbrpc.builtin.UpdateOptionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateOptionsRequest::CopyFrom(const UpdateOptionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sofa.pbrpc.builtin.UpdateOptionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOptionsRequest::IsInitialized() const {
  return true;
}

void UpdateOptionsRequest::InternalSwap(UpdateOptionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOptionsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateOptionsResponse::InitAsDefaultInstance() {
  ::sofa::pbrpc::builtin::_UpdateOptionsResponse_default_instance_._instance.get_mutable()->options_ = const_cast< ::sofa::pbrpc::builtin::ServerOptions*>(
      ::sofa::pbrpc::builtin::ServerOptions::internal_default_instance());
}
class UpdateOptionsResponse::_Internal {
 public:
  static const ::sofa::pbrpc::builtin::ServerOptions& options(const UpdateOptionsResponse* msg);
};

const ::sofa::pbrpc::builtin::ServerOptions&
UpdateOptionsResponse::_Internal::options(const UpdateOptionsResponse* msg) {
  return *msg->options_;
}
UpdateOptionsResponse::UpdateOptionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sofa.pbrpc.builtin.UpdateOptionsResponse)
}
UpdateOptionsResponse::UpdateOptionsResponse(const UpdateOptionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    options_ = new ::sofa::pbrpc::builtin::ServerOptions(*from.options_);
  } else {
    options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:sofa.pbrpc.builtin.UpdateOptionsResponse)
}

void UpdateOptionsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateOptionsResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  options_ = nullptr;
}

UpdateOptionsResponse::~UpdateOptionsResponse() {
  // @@protoc_insertion_point(destructor:sofa.pbrpc.builtin.UpdateOptionsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateOptionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete options_;
}

void UpdateOptionsResponse::ArenaDtor(void* object) {
  UpdateOptionsResponse* _this = reinterpret_cast< UpdateOptionsResponse* >(object);
  (void)_this;
}
void UpdateOptionsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateOptionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateOptionsResponse& UpdateOptionsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateOptionsResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void UpdateOptionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sofa.pbrpc.builtin.UpdateOptionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && options_ != nullptr) {
    delete options_;
  }
  options_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateOptionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .sofa.pbrpc.builtin.ServerOptions options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateOptionsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sofa.pbrpc.builtin.UpdateOptionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .sofa.pbrpc.builtin.ServerOptions options = 1;
  if (this->has_options()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::options(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sofa.pbrpc.builtin.UpdateOptionsResponse)
  return target;
}

size_t UpdateOptionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sofa.pbrpc.builtin.UpdateOptionsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sofa.pbrpc.builtin.ServerOptions options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateOptionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sofa.pbrpc.builtin.UpdateOptionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateOptionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateOptionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sofa.pbrpc.builtin.UpdateOptionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sofa.pbrpc.builtin.UpdateOptionsResponse)
    MergeFrom(*source);
  }
}

void UpdateOptionsResponse::MergeFrom(const UpdateOptionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sofa.pbrpc.builtin.UpdateOptionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    _internal_mutable_options()->::sofa::pbrpc::builtin::ServerOptions::MergeFrom(from._internal_options());
  }
}

void UpdateOptionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sofa.pbrpc.builtin.UpdateOptionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateOptionsResponse::CopyFrom(const UpdateOptionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sofa.pbrpc.builtin.UpdateOptionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateOptionsResponse::IsInitialized() const {
  return true;
}

void UpdateOptionsResponse::InternalSwap(UpdateOptionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(options_, other->options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateOptionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServerStatusRequest::InitAsDefaultInstance() {
}
class ServerStatusRequest::_Internal {
 public:
};

ServerStatusRequest::ServerStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sofa.pbrpc.builtin.ServerStatusRequest)
}
ServerStatusRequest::ServerStatusRequest(const ServerStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sofa.pbrpc.builtin.ServerStatusRequest)
}

void ServerStatusRequest::SharedCtor() {
}

ServerStatusRequest::~ServerStatusRequest() {
  // @@protoc_insertion_point(destructor:sofa.pbrpc.builtin.ServerStatusRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ServerStatusRequest::ArenaDtor(void* object) {
  ServerStatusRequest* _this = reinterpret_cast< ServerStatusRequest* >(object);
  (void)_this;
}
void ServerStatusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerStatusRequest& ServerStatusRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerStatusRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServerStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sofa.pbrpc.builtin.ServerStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerStatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerStatusRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sofa.pbrpc.builtin.ServerStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sofa.pbrpc.builtin.ServerStatusRequest)
  return target;
}

size_t ServerStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sofa.pbrpc.builtin.ServerStatusRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerStatusRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sofa.pbrpc.builtin.ServerStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerStatusRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerStatusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sofa.pbrpc.builtin.ServerStatusRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sofa.pbrpc.builtin.ServerStatusRequest)
    MergeFrom(*source);
  }
}

void ServerStatusRequest::MergeFrom(const ServerStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sofa.pbrpc.builtin.ServerStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ServerStatusRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sofa.pbrpc.builtin.ServerStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerStatusRequest::CopyFrom(const ServerStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sofa.pbrpc.builtin.ServerStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerStatusRequest::IsInitialized() const {
  return true;
}

void ServerStatusRequest::InternalSwap(ServerStatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerStatusRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServerStatusResponse::InitAsDefaultInstance() {
}
class ServerStatusResponse::_Internal {
 public:
};

ServerStatusResponse::ServerStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sofa.pbrpc.builtin.ServerStatusResponse)
}
ServerStatusResponse::ServerStatusResponse(const ServerStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&connection_count_, &from.connection_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_listening_) -
    reinterpret_cast<char*>(&connection_count_)) + sizeof(is_listening_));
  // @@protoc_insertion_point(copy_constructor:sofa.pbrpc.builtin.ServerStatusResponse)
}

void ServerStatusResponse::SharedCtor() {
  ::memset(&connection_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_listening_) -
      reinterpret_cast<char*>(&connection_count_)) + sizeof(is_listening_));
}

ServerStatusResponse::~ServerStatusResponse() {
  // @@protoc_insertion_point(destructor:sofa.pbrpc.builtin.ServerStatusResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ServerStatusResponse::ArenaDtor(void* object) {
  ServerStatusResponse* _this = reinterpret_cast< ServerStatusResponse* >(object);
  (void)_this;
}
void ServerStatusResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerStatusResponse& ServerStatusResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerStatusResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServerStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sofa.pbrpc.builtin.ServerStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&connection_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_listening_) -
      reinterpret_cast<char*>(&connection_count_)) + sizeof(is_listening_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerStatusResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_listening = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_listening_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 connection_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          connection_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 service_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          service_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 pending_message_count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          pending_message_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 pending_buffer_size = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          pending_buffer_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 pending_data_size = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          pending_data_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerStatusResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sofa.pbrpc.builtin.ServerStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_listening = 1;
  if (this->is_listening() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_listening(), target);
  }

  // int64 connection_count = 2;
  if (this->connection_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_connection_count(), target);
  }

  // int64 service_count = 3;
  if (this->service_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_service_count(), target);
  }

  // int64 pending_message_count = 4;
  if (this->pending_message_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_pending_message_count(), target);
  }

  // int64 pending_buffer_size = 5;
  if (this->pending_buffer_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_pending_buffer_size(), target);
  }

  // int64 pending_data_size = 6;
  if (this->pending_data_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_pending_data_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sofa.pbrpc.builtin.ServerStatusResponse)
  return target;
}

size_t ServerStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sofa.pbrpc.builtin.ServerStatusResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 connection_count = 2;
  if (this->connection_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_connection_count());
  }

  // int64 service_count = 3;
  if (this->service_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_service_count());
  }

  // int64 pending_message_count = 4;
  if (this->pending_message_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_pending_message_count());
  }

  // int64 pending_buffer_size = 5;
  if (this->pending_buffer_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_pending_buffer_size());
  }

  // int64 pending_data_size = 6;
  if (this->pending_data_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_pending_data_size());
  }

  // bool is_listening = 1;
  if (this->is_listening() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerStatusResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sofa.pbrpc.builtin.ServerStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerStatusResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerStatusResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sofa.pbrpc.builtin.ServerStatusResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sofa.pbrpc.builtin.ServerStatusResponse)
    MergeFrom(*source);
  }
}

void ServerStatusResponse::MergeFrom(const ServerStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sofa.pbrpc.builtin.ServerStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connection_count() != 0) {
    _internal_set_connection_count(from._internal_connection_count());
  }
  if (from.service_count() != 0) {
    _internal_set_service_count(from._internal_service_count());
  }
  if (from.pending_message_count() != 0) {
    _internal_set_pending_message_count(from._internal_pending_message_count());
  }
  if (from.pending_buffer_size() != 0) {
    _internal_set_pending_buffer_size(from._internal_pending_buffer_size());
  }
  if (from.pending_data_size() != 0) {
    _internal_set_pending_data_size(from._internal_pending_data_size());
  }
  if (from.is_listening() != 0) {
    _internal_set_is_listening(from._internal_is_listening());
  }
}

void ServerStatusResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sofa.pbrpc.builtin.ServerStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerStatusResponse::CopyFrom(const ServerStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sofa.pbrpc.builtin.ServerStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerStatusResponse::IsInitialized() const {
  return true;
}

void ServerStatusResponse::InternalSwap(ServerStatusResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServerStatusResponse, is_listening_)
      + sizeof(ServerStatusResponse::is_listening_)
      - PROTOBUF_FIELD_OFFSET(ServerStatusResponse, connection_count_)>(
          reinterpret_cast<char*>(&connection_count_),
          reinterpret_cast<char*>(&other->connection_count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerStatusResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListServiceRequest::InitAsDefaultInstance() {
}
class ListServiceRequest::_Internal {
 public:
};

ListServiceRequest::ListServiceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sofa.pbrpc.builtin.ListServiceRequest)
}
ListServiceRequest::ListServiceRequest(const ListServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sofa.pbrpc.builtin.ListServiceRequest)
}

void ListServiceRequest::SharedCtor() {
}

ListServiceRequest::~ListServiceRequest() {
  // @@protoc_insertion_point(destructor:sofa.pbrpc.builtin.ListServiceRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListServiceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListServiceRequest::ArenaDtor(void* object) {
  ListServiceRequest* _this = reinterpret_cast< ListServiceRequest* >(object);
  (void)_this;
}
void ListServiceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListServiceRequest& ListServiceRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListServiceRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sofa.pbrpc.builtin.ListServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListServiceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListServiceRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sofa.pbrpc.builtin.ListServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sofa.pbrpc.builtin.ListServiceRequest)
  return target;
}

size_t ListServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sofa.pbrpc.builtin.ListServiceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListServiceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sofa.pbrpc.builtin.ListServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListServiceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListServiceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sofa.pbrpc.builtin.ListServiceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sofa.pbrpc.builtin.ListServiceRequest)
    MergeFrom(*source);
  }
}

void ListServiceRequest::MergeFrom(const ListServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sofa.pbrpc.builtin.ListServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ListServiceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sofa.pbrpc.builtin.ListServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServiceRequest::CopyFrom(const ListServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sofa.pbrpc.builtin.ListServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceRequest::IsInitialized() const {
  return true;
}

void ListServiceRequest::InternalSwap(ListServiceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServiceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListServiceResponse::InitAsDefaultInstance() {
}
class ListServiceResponse::_Internal {
 public:
};

void ListServiceResponse::clear_files() {
  files_.Clear();
}
ListServiceResponse::ListServiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  services_(arena),
  files_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sofa.pbrpc.builtin.ListServiceResponse)
}
ListServiceResponse::ListServiceResponse(const ListServiceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      services_(from.services_),
      files_(from.files_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:sofa.pbrpc.builtin.ListServiceResponse)
}

void ListServiceResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListServiceResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
}

ListServiceResponse::~ListServiceResponse() {
  // @@protoc_insertion_point(destructor:sofa.pbrpc.builtin.ListServiceResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListServiceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListServiceResponse::ArenaDtor(void* object) {
  ListServiceResponse* _this = reinterpret_cast< ListServiceResponse* >(object);
  (void)_this;
}
void ListServiceResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListServiceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListServiceResponse& ListServiceResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListServiceResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sofa.pbrpc.builtin.ListServiceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  services_.Clear();
  files_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListServiceResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string services = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_services();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "sofa.pbrpc.builtin.ListServiceResponse.services"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .google.protobuf.FileDescriptorProto files = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_files(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListServiceResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sofa.pbrpc.builtin.ListServiceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string services = 1;
  for (int i = 0, n = this->_internal_services_size(); i < n; i++) {
    const auto& s = this->_internal_services(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sofa.pbrpc.builtin.ListServiceResponse.services");
    target = stream->WriteString(1, s, target);
  }

  // repeated .google.protobuf.FileDescriptorProto files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_files_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_files(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sofa.pbrpc.builtin.ListServiceResponse)
  return target;
}

size_t ListServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sofa.pbrpc.builtin.ListServiceResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string services = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(services_.size());
  for (int i = 0, n = services_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      services_.Get(i));
  }

  // repeated .google.protobuf.FileDescriptorProto files = 2;
  total_size += 1UL * this->_internal_files_size();
  for (const auto& msg : this->files_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListServiceResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sofa.pbrpc.builtin.ListServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListServiceResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListServiceResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sofa.pbrpc.builtin.ListServiceResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sofa.pbrpc.builtin.ListServiceResponse)
    MergeFrom(*source);
  }
}

void ListServiceResponse::MergeFrom(const ListServiceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sofa.pbrpc.builtin.ListServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  services_.MergeFrom(from.services_);
  files_.MergeFrom(from.files_);
}

void ListServiceResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sofa.pbrpc.builtin.ListServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServiceResponse::CopyFrom(const ListServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sofa.pbrpc.builtin.ListServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceResponse::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(files_)) return false;
  return true;
}

void ListServiceResponse::InternalSwap(ListServiceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  services_.InternalSwap(&other->services_);
  files_.InternalSwap(&other->files_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServiceResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MethodStat::InitAsDefaultInstance() {
}
class MethodStat::_Internal {
 public:
};

MethodStat::MethodStat(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sofa.pbrpc.builtin.MethodStat)
}
MethodStat::MethodStat(const MethodStat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  method_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method_name().empty()) {
    method_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_method_name(),
      GetArena());
  }
  ::memcpy(&succeed_count_, &from.succeed_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&slot_id_) -
    reinterpret_cast<char*>(&succeed_count_)) + sizeof(slot_id_));
  // @@protoc_insertion_point(copy_constructor:sofa.pbrpc.builtin.MethodStat)
}

void MethodStat::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MethodStat_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  method_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&succeed_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&slot_id_) -
      reinterpret_cast<char*>(&succeed_count_)) + sizeof(slot_id_));
}

MethodStat::~MethodStat() {
  // @@protoc_insertion_point(destructor:sofa.pbrpc.builtin.MethodStat)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MethodStat::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  method_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MethodStat::ArenaDtor(void* object) {
  MethodStat* _this = reinterpret_cast< MethodStat* >(object);
  (void)_this;
}
void MethodStat::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MethodStat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MethodStat& MethodStat::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MethodStat_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MethodStat::Clear() {
// @@protoc_insertion_point(message_clear_start:sofa.pbrpc.builtin.MethodStat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  method_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&succeed_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&slot_id_) -
      reinterpret_cast<char*>(&succeed_count_)) + sizeof(slot_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MethodStat::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string method_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_method_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "sofa.pbrpc.builtin.MethodStat.method_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 succeed_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          succeed_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float succeed_avg_time_us = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          succeed_avg_time_us_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int64 succeed_max_time_us = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          succeed_max_time_us_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 failed_count = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          failed_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float failed_avg_time_us = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          failed_avg_time_us_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int64 failed_max_time_us = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          failed_max_time_us_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 slot_id = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          slot_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MethodStat::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sofa.pbrpc.builtin.MethodStat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method_name = 1;
  if (this->method_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method_name().data(), static_cast<int>(this->_internal_method_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sofa.pbrpc.builtin.MethodStat.method_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_method_name(), target);
  }

  // int64 succeed_count = 2;
  if (this->succeed_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_succeed_count(), target);
  }

  // float succeed_avg_time_us = 3;
  if (!(this->succeed_avg_time_us() <= 0 && this->succeed_avg_time_us() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_succeed_avg_time_us(), target);
  }

  // int64 succeed_max_time_us = 4;
  if (this->succeed_max_time_us() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_succeed_max_time_us(), target);
  }

  // int64 failed_count = 5;
  if (this->failed_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_failed_count(), target);
  }

  // float failed_avg_time_us = 6;
  if (!(this->failed_avg_time_us() <= 0 && this->failed_avg_time_us() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_failed_avg_time_us(), target);
  }

  // int64 failed_max_time_us = 7;
  if (this->failed_max_time_us() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_failed_max_time_us(), target);
  }

  // int64 slot_id = 8;
  if (this->slot_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_slot_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sofa.pbrpc.builtin.MethodStat)
  return target;
}

size_t MethodStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sofa.pbrpc.builtin.MethodStat)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string method_name = 1;
  if (this->method_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method_name());
  }

  // int64 succeed_count = 2;
  if (this->succeed_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_succeed_count());
  }

  // int64 succeed_max_time_us = 4;
  if (this->succeed_max_time_us() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_succeed_max_time_us());
  }

  // float succeed_avg_time_us = 3;
  if (!(this->succeed_avg_time_us() <= 0 && this->succeed_avg_time_us() >= 0)) {
    total_size += 1 + 4;
  }

  // float failed_avg_time_us = 6;
  if (!(this->failed_avg_time_us() <= 0 && this->failed_avg_time_us() >= 0)) {
    total_size += 1 + 4;
  }

  // int64 failed_count = 5;
  if (this->failed_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_failed_count());
  }

  // int64 failed_max_time_us = 7;
  if (this->failed_max_time_us() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_failed_max_time_us());
  }

  // int64 slot_id = 8;
  if (this->slot_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_slot_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MethodStat::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sofa.pbrpc.builtin.MethodStat)
  GOOGLE_DCHECK_NE(&from, this);
  const MethodStat* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MethodStat>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sofa.pbrpc.builtin.MethodStat)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sofa.pbrpc.builtin.MethodStat)
    MergeFrom(*source);
  }
}

void MethodStat::MergeFrom(const MethodStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sofa.pbrpc.builtin.MethodStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.method_name().size() > 0) {
    _internal_set_method_name(from._internal_method_name());
  }
  if (from.succeed_count() != 0) {
    _internal_set_succeed_count(from._internal_succeed_count());
  }
  if (from.succeed_max_time_us() != 0) {
    _internal_set_succeed_max_time_us(from._internal_succeed_max_time_us());
  }
  if (!(from.succeed_avg_time_us() <= 0 && from.succeed_avg_time_us() >= 0)) {
    _internal_set_succeed_avg_time_us(from._internal_succeed_avg_time_us());
  }
  if (!(from.failed_avg_time_us() <= 0 && from.failed_avg_time_us() >= 0)) {
    _internal_set_failed_avg_time_us(from._internal_failed_avg_time_us());
  }
  if (from.failed_count() != 0) {
    _internal_set_failed_count(from._internal_failed_count());
  }
  if (from.failed_max_time_us() != 0) {
    _internal_set_failed_max_time_us(from._internal_failed_max_time_us());
  }
  if (from.slot_id() != 0) {
    _internal_set_slot_id(from._internal_slot_id());
  }
}

void MethodStat::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sofa.pbrpc.builtin.MethodStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MethodStat::CopyFrom(const MethodStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sofa.pbrpc.builtin.MethodStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MethodStat::IsInitialized() const {
  return true;
}

void MethodStat::InternalSwap(MethodStat* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  method_name_.Swap(&other->method_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MethodStat, slot_id_)
      + sizeof(MethodStat::slot_id_)
      - PROTOBUF_FIELD_OFFSET(MethodStat, succeed_count_)>(
          reinterpret_cast<char*>(&succeed_count_),
          reinterpret_cast<char*>(&other->succeed_count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MethodStat::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServiceStat::InitAsDefaultInstance() {
}
class ServiceStat::_Internal {
 public:
};

ServiceStat::ServiceStat(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  method_stats_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sofa.pbrpc.builtin.ServiceStat)
}
ServiceStat::ServiceStat(const ServiceStat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      method_stats_(from.method_stats_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_service_name(),
      GetArena());
  }
  ::memcpy(&period_seconds_, &from.period_seconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&failed_count_) -
    reinterpret_cast<char*>(&period_seconds_)) + sizeof(failed_count_));
  // @@protoc_insertion_point(copy_constructor:sofa.pbrpc.builtin.ServiceStat)
}

void ServiceStat::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ServiceStat_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&period_seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&failed_count_) -
      reinterpret_cast<char*>(&period_seconds_)) + sizeof(failed_count_));
}

ServiceStat::~ServiceStat() {
  // @@protoc_insertion_point(destructor:sofa.pbrpc.builtin.ServiceStat)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServiceStat::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ServiceStat::ArenaDtor(void* object) {
  ServiceStat* _this = reinterpret_cast< ServiceStat* >(object);
  (void)_this;
}
void ServiceStat::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServiceStat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServiceStat& ServiceStat::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServiceStat_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ServiceStat::Clear() {
// @@protoc_insertion_point(message_clear_start:sofa.pbrpc.builtin.ServiceStat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  method_stats_.Clear();
  service_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&period_seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&failed_count_) -
      reinterpret_cast<char*>(&period_seconds_)) + sizeof(failed_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServiceStat::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "sofa.pbrpc.builtin.ServiceStat.service_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 period_seconds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          period_seconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 succeed_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          succeed_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 failed_count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          failed_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .sofa.pbrpc.builtin.MethodStat method_stats = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_method_stats(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServiceStat::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sofa.pbrpc.builtin.ServiceStat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sofa.pbrpc.builtin.ServiceStat.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // int64 period_seconds = 2;
  if (this->period_seconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_period_seconds(), target);
  }

  // int64 succeed_count = 3;
  if (this->succeed_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_succeed_count(), target);
  }

  // int64 failed_count = 4;
  if (this->failed_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_failed_count(), target);
  }

  // repeated .sofa.pbrpc.builtin.MethodStat method_stats = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_method_stats_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_method_stats(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sofa.pbrpc.builtin.ServiceStat)
  return target;
}

size_t ServiceStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sofa.pbrpc.builtin.ServiceStat)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sofa.pbrpc.builtin.MethodStat method_stats = 5;
  total_size += 1UL * this->_internal_method_stats_size();
  for (const auto& msg : this->method_stats_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // int64 period_seconds = 2;
  if (this->period_seconds() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_period_seconds());
  }

  // int64 succeed_count = 3;
  if (this->succeed_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_succeed_count());
  }

  // int64 failed_count = 4;
  if (this->failed_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_failed_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceStat::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sofa.pbrpc.builtin.ServiceStat)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceStat* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServiceStat>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sofa.pbrpc.builtin.ServiceStat)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sofa.pbrpc.builtin.ServiceStat)
    MergeFrom(*source);
  }
}

void ServiceStat::MergeFrom(const ServiceStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sofa.pbrpc.builtin.ServiceStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  method_stats_.MergeFrom(from.method_stats_);
  if (from.service_name().size() > 0) {
    _internal_set_service_name(from._internal_service_name());
  }
  if (from.period_seconds() != 0) {
    _internal_set_period_seconds(from._internal_period_seconds());
  }
  if (from.succeed_count() != 0) {
    _internal_set_succeed_count(from._internal_succeed_count());
  }
  if (from.failed_count() != 0) {
    _internal_set_failed_count(from._internal_failed_count());
  }
}

void ServiceStat::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sofa.pbrpc.builtin.ServiceStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceStat::CopyFrom(const ServiceStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sofa.pbrpc.builtin.ServiceStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceStat::IsInitialized() const {
  return true;
}

void ServiceStat::InternalSwap(ServiceStat* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  method_stats_.InternalSwap(&other->method_stats_);
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServiceStat, failed_count_)
      + sizeof(ServiceStat::failed_count_)
      - PROTOBUF_FIELD_OFFSET(ServiceStat, period_seconds_)>(
          reinterpret_cast<char*>(&period_seconds_),
          reinterpret_cast<char*>(&other->period_seconds_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ServiceStat::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StatRequest::InitAsDefaultInstance() {
}
class StatRequest::_Internal {
 public:
};

StatRequest::StatRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sofa.pbrpc.builtin.StatRequest)
}
StatRequest::StatRequest(const StatRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_service_name(),
      GetArena());
  }
  period_seconds_ = from.period_seconds_;
  // @@protoc_insertion_point(copy_constructor:sofa.pbrpc.builtin.StatRequest)
}

void StatRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StatRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  period_seconds_ = PROTOBUF_LONGLONG(0);
}

StatRequest::~StatRequest() {
  // @@protoc_insertion_point(destructor:sofa.pbrpc.builtin.StatRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StatRequest::ArenaDtor(void* object) {
  StatRequest* _this = reinterpret_cast< StatRequest* >(object);
  (void)_this;
}
void StatRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatRequest& StatRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatRequest_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void StatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sofa.pbrpc.builtin.StatRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  period_seconds_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_service_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "sofa.pbrpc.builtin.StatRequest.service_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 period_seconds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          period_seconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sofa.pbrpc.builtin.StatRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sofa.pbrpc.builtin.StatRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // int64 period_seconds = 2;
  if (this->period_seconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_period_seconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sofa.pbrpc.builtin.StatRequest)
  return target;
}

size_t StatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sofa.pbrpc.builtin.StatRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // int64 period_seconds = 2;
  if (this->period_seconds() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_period_seconds());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sofa.pbrpc.builtin.StatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StatRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sofa.pbrpc.builtin.StatRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sofa.pbrpc.builtin.StatRequest)
    MergeFrom(*source);
  }
}

void StatRequest::MergeFrom(const StatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sofa.pbrpc.builtin.StatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {
    _internal_set_service_name(from._internal_service_name());
  }
  if (from.period_seconds() != 0) {
    _internal_set_period_seconds(from._internal_period_seconds());
  }
}

void StatRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sofa.pbrpc.builtin.StatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatRequest::CopyFrom(const StatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sofa.pbrpc.builtin.StatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatRequest::IsInitialized() const {
  return true;
}

void StatRequest::InternalSwap(StatRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(period_seconds_, other->period_seconds_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StatResponse::InitAsDefaultInstance() {
}
class StatResponse::_Internal {
 public:
};

StatResponse::StatResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  service_stats_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:sofa.pbrpc.builtin.StatResponse)
}
StatResponse::StatResponse(const StatResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      service_stats_(from.service_stats_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  server_start_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_server_start_time().empty()) {
    server_start_time_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_server_start_time(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:sofa.pbrpc.builtin.StatResponse)
}

void StatResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StatResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  server_start_time_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StatResponse::~StatResponse() {
  // @@protoc_insertion_point(destructor:sofa.pbrpc.builtin.StatResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  server_start_time_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StatResponse::ArenaDtor(void* object) {
  StatResponse* _this = reinterpret_cast< StatResponse* >(object);
  (void)_this;
}
void StatResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatResponse& StatResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatResponse_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto.base);
  return *internal_default_instance();
}


void StatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sofa.pbrpc.builtin.StatResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_stats_.Clear();
  server_start_time_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .sofa.pbrpc.builtin.ServiceStat service_stats = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_service_stats(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string server_start_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_server_start_time();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "sofa.pbrpc.builtin.StatResponse.server_start_time"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sofa.pbrpc.builtin.StatResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .sofa.pbrpc.builtin.ServiceStat service_stats = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_service_stats_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_service_stats(i), target, stream);
  }

  // string server_start_time = 2;
  if (this->server_start_time().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_server_start_time().data(), static_cast<int>(this->_internal_server_start_time().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sofa.pbrpc.builtin.StatResponse.server_start_time");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_server_start_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sofa.pbrpc.builtin.StatResponse)
  return target;
}

size_t StatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sofa.pbrpc.builtin.StatResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sofa.pbrpc.builtin.ServiceStat service_stats = 1;
  total_size += 1UL * this->_internal_service_stats_size();
  for (const auto& msg : this->service_stats_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string server_start_time = 2;
  if (this->server_start_time().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_server_start_time());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sofa.pbrpc.builtin.StatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StatResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sofa.pbrpc.builtin.StatResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sofa.pbrpc.builtin.StatResponse)
    MergeFrom(*source);
  }
}

void StatResponse::MergeFrom(const StatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sofa.pbrpc.builtin.StatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  service_stats_.MergeFrom(from.service_stats_);
  if (from.server_start_time().size() > 0) {
    _internal_set_server_start_time(from._internal_server_start_time());
  }
}

void StatResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sofa.pbrpc.builtin.StatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatResponse::CopyFrom(const StatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sofa.pbrpc.builtin.StatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatResponse::IsInitialized() const {
  return true;
}

void StatResponse::InternalSwap(StatResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  service_stats_.InternalSwap(&other->service_stats_);
  server_start_time_.Swap(&other->server_start_time_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StatResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

BuiltinService::~BuiltinService() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* BuiltinService::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto);
  return file_level_service_descriptors_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* BuiltinService::GetDescriptor() {
  return descriptor();
}

void BuiltinService::Health(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::sofa::pbrpc::builtin::HealthRequest*,
                         ::sofa::pbrpc::builtin::HealthResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Health() not implemented.");
  done->Run();
}

void BuiltinService::ServerOptions(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::sofa::pbrpc::builtin::ServerOptionsRequest*,
                         ::sofa::pbrpc::builtin::ServerOptionsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ServerOptions() not implemented.");
  done->Run();
}

void BuiltinService::UpdateOptions(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::sofa::pbrpc::builtin::UpdateOptionsRequest*,
                         ::sofa::pbrpc::builtin::UpdateOptionsResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method UpdateOptions() not implemented.");
  done->Run();
}

void BuiltinService::ServerStatus(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::sofa::pbrpc::builtin::ServerStatusRequest*,
                         ::sofa::pbrpc::builtin::ServerStatusResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ServerStatus() not implemented.");
  done->Run();
}

void BuiltinService::ListService(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::sofa::pbrpc::builtin::ListServiceRequest*,
                         ::sofa::pbrpc::builtin::ListServiceResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ListService() not implemented.");
  done->Run();
}

void BuiltinService::Stat(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::sofa::pbrpc::builtin::StatRequest*,
                         ::sofa::pbrpc::builtin::StatResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Stat() not implemented.");
  done->Run();
}

void BuiltinService::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_sofa_2fpbrpc_2fbuiltin_5fservice_2eproto[0]);
  switch(method->index()) {
    case 0:
      Health(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::sofa::pbrpc::builtin::HealthRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::sofa::pbrpc::builtin::HealthResponse*>(
                 response),
             done);
      break;
    case 1:
      ServerOptions(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::sofa::pbrpc::builtin::ServerOptionsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::sofa::pbrpc::builtin::ServerOptionsResponse*>(
                 response),
             done);
      break;
    case 2:
      UpdateOptions(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::sofa::pbrpc::builtin::UpdateOptionsRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::sofa::pbrpc::builtin::UpdateOptionsResponse*>(
                 response),
             done);
      break;
    case 3:
      ServerStatus(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::sofa::pbrpc::builtin::ServerStatusRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::sofa::pbrpc::builtin::ServerStatusResponse*>(
                 response),
             done);
      break;
    case 4:
      ListService(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::sofa::pbrpc::builtin::ListServiceRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::sofa::pbrpc::builtin::ListServiceResponse*>(
                 response),
             done);
      break;
    case 5:
      Stat(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::sofa::pbrpc::builtin::StatRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::sofa::pbrpc::builtin::StatResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& BuiltinService::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::sofa::pbrpc::builtin::HealthRequest::default_instance();
    case 1:
      return ::sofa::pbrpc::builtin::ServerOptionsRequest::default_instance();
    case 2:
      return ::sofa::pbrpc::builtin::UpdateOptionsRequest::default_instance();
    case 3:
      return ::sofa::pbrpc::builtin::ServerStatusRequest::default_instance();
    case 4:
      return ::sofa::pbrpc::builtin::ListServiceRequest::default_instance();
    case 5:
      return ::sofa::pbrpc::builtin::StatRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& BuiltinService::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::sofa::pbrpc::builtin::HealthResponse::default_instance();
    case 1:
      return ::sofa::pbrpc::builtin::ServerOptionsResponse::default_instance();
    case 2:
      return ::sofa::pbrpc::builtin::UpdateOptionsResponse::default_instance();
    case 3:
      return ::sofa::pbrpc::builtin::ServerStatusResponse::default_instance();
    case 4:
      return ::sofa::pbrpc::builtin::ListServiceResponse::default_instance();
    case 5:
      return ::sofa::pbrpc::builtin::StatResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

BuiltinService_Stub::BuiltinService_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
BuiltinService_Stub::BuiltinService_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
BuiltinService_Stub::~BuiltinService_Stub() {
  if (owns_channel_) delete channel_;
}

void BuiltinService_Stub::Health(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::sofa::pbrpc::builtin::HealthRequest* request,
                              ::sofa::pbrpc::builtin::HealthResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void BuiltinService_Stub::ServerOptions(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::sofa::pbrpc::builtin::ServerOptionsRequest* request,
                              ::sofa::pbrpc::builtin::ServerOptionsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void BuiltinService_Stub::UpdateOptions(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::sofa::pbrpc::builtin::UpdateOptionsRequest* request,
                              ::sofa::pbrpc::builtin::UpdateOptionsResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void BuiltinService_Stub::ServerStatus(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::sofa::pbrpc::builtin::ServerStatusRequest* request,
                              ::sofa::pbrpc::builtin::ServerStatusResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void BuiltinService_Stub::ListService(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::sofa::pbrpc::builtin::ListServiceRequest* request,
                              ::sofa::pbrpc::builtin::ListServiceResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void BuiltinService_Stub::Stat(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::sofa::pbrpc::builtin::StatRequest* request,
                              ::sofa::pbrpc::builtin::StatResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace builtin
}  // namespace pbrpc
}  // namespace sofa
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::sofa::pbrpc::builtin::HealthRequest* Arena::CreateMaybeMessage< ::sofa::pbrpc::builtin::HealthRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sofa::pbrpc::builtin::HealthRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sofa::pbrpc::builtin::HealthResponse* Arena::CreateMaybeMessage< ::sofa::pbrpc::builtin::HealthResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sofa::pbrpc::builtin::HealthResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sofa::pbrpc::builtin::ServerOptions* Arena::CreateMaybeMessage< ::sofa::pbrpc::builtin::ServerOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sofa::pbrpc::builtin::ServerOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::sofa::pbrpc::builtin::ServerOptionsRequest* Arena::CreateMaybeMessage< ::sofa::pbrpc::builtin::ServerOptionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sofa::pbrpc::builtin::ServerOptionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sofa::pbrpc::builtin::ServerOptionsResponse* Arena::CreateMaybeMessage< ::sofa::pbrpc::builtin::ServerOptionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sofa::pbrpc::builtin::ServerOptionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sofa::pbrpc::builtin::UpdateOptionsRequest* Arena::CreateMaybeMessage< ::sofa::pbrpc::builtin::UpdateOptionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sofa::pbrpc::builtin::UpdateOptionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sofa::pbrpc::builtin::UpdateOptionsResponse* Arena::CreateMaybeMessage< ::sofa::pbrpc::builtin::UpdateOptionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sofa::pbrpc::builtin::UpdateOptionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sofa::pbrpc::builtin::ServerStatusRequest* Arena::CreateMaybeMessage< ::sofa::pbrpc::builtin::ServerStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sofa::pbrpc::builtin::ServerStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sofa::pbrpc::builtin::ServerStatusResponse* Arena::CreateMaybeMessage< ::sofa::pbrpc::builtin::ServerStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sofa::pbrpc::builtin::ServerStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sofa::pbrpc::builtin::ListServiceRequest* Arena::CreateMaybeMessage< ::sofa::pbrpc::builtin::ListServiceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sofa::pbrpc::builtin::ListServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sofa::pbrpc::builtin::ListServiceResponse* Arena::CreateMaybeMessage< ::sofa::pbrpc::builtin::ListServiceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sofa::pbrpc::builtin::ListServiceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sofa::pbrpc::builtin::MethodStat* Arena::CreateMaybeMessage< ::sofa::pbrpc::builtin::MethodStat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sofa::pbrpc::builtin::MethodStat >(arena);
}
template<> PROTOBUF_NOINLINE ::sofa::pbrpc::builtin::ServiceStat* Arena::CreateMaybeMessage< ::sofa::pbrpc::builtin::ServiceStat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sofa::pbrpc::builtin::ServiceStat >(arena);
}
template<> PROTOBUF_NOINLINE ::sofa::pbrpc::builtin::StatRequest* Arena::CreateMaybeMessage< ::sofa::pbrpc::builtin::StatRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sofa::pbrpc::builtin::StatRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sofa::pbrpc::builtin::StatResponse* Arena::CreateMaybeMessage< ::sofa::pbrpc::builtin::StatResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sofa::pbrpc::builtin::StatResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
